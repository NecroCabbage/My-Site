@page
@model OmerBagrutSite.Pages.SnakeGameModel
@{
    ViewData["Title"] = "Snake Game";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Snake Game</title>
    <style>
        canvas {
            border: 2px solid black;
            display: block;
            margin: 40px auto;
            background-color: #eee;
        }

        .center {
            text-align: center;
        }

        button {
            margin-top: 10px;
            padding: 10px 20px;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <div class="center">
        <h2>Snake Game</h2>
        <canvas id="gameCanvas" width="400" height="400"></canvas>
        <br />
        <button onclick="startGame()">Start Game</button>
    </div>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const box = 20;
        let snake = [];
        let direction = 'RIGHT';
        let food = {};
        let game;

        function drawRect(x, y, color) {
            ctx.fillStyle = color;
            ctx.fillRect(x * box, y * box, box, box);
        }

        function drawSnake() {
            for (let i = 0; i < snake.length; i++) {
                drawRect(snake[i].x, snake[i].y, i === 0 ? 'green' : 'lime');
            }
        }

        function placeFood() {
            food = {
                x: Math.floor(Math.random() * (canvas.width / box)),
                y: Math.floor(Math.random() * (canvas.height / box))
            };
        }

        function drawFood() {
            drawRect(food.x, food.y, 'red');
        }

        function collision(newHead) {
            return snake.some(part => part.x === newHead.x && part.y === newHead.y) ||
                newHead.x < 0 || newHead.y < 0 ||
                newHead.x >= canvas.width / box || newHead.y >= canvas.height / box;
        }

        function update() {
            let head = { x: snake[0].x, y: snake[0].y };

            if (direction === 'LEFT') head.x--;
            else if (direction === 'RIGHT') head.x++;
            else if (direction === 'UP') head.y--;
            else if (direction === 'DOWN') head.y++;

            if (collision(head)) {
                clearInterval(game);
                alert('Game Over');
                return;
            }

            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                placeFood();
            } else {
                snake.pop();
            }

            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawSnake();
            drawFood();
        }

        function startGame() {
            snake = [{ x: 5, y: 5 }];
            direction = 'RIGHT';
            placeFood();
            clearInterval(game);
            game = setInterval(update, 150);
        }

        document.addEventListener('keydown', function (e) {
            if (e.key === 'ArrowLeft' && direction !== 'RIGHT') direction = 'LEFT';
            else if (e.key === 'ArrowRight' && direction !== 'LEFT') direction = 'RIGHT';
            else if (e.key === 'ArrowUp' && direction !== 'DOWN') direction = 'UP';
            else if (e.key === 'ArrowDown' && direction !== 'UP') direction = 'DOWN';
        });
    </script>
</body>
</html>